<?php
require_once dirname(__FILE__).'/../../lib/Config.php';

/**
 * Test class for Helios_Config.
 * Generated by PHPUnit on 2010-02-07 at 18:45:05.
 */
class Helios_ConfigTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Helios_Config
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Helios_Config;
        $this->object->load( dirname( __FILE__ ) . '/../config/good.yml' );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     *
     */
    public function testLoadSuccess( )
    {
        $failure = false;

        try
        {
            $this->object->load( dirname( __FILE__ ) . '/../config/good.yml' );
        }
        catch ( Exception $e )
        {
            $failure = true;
        }

        $this->assertFalse( $failure );

        $this->assertTrue( $this->object->isLoaded( ) );
    }

    /**
     *
     */
    public function testLoadFailure( )
    {
        $failure = false;

        try
        {
            $this->object->load( dirname( __FILE__ ) . '/../config/fake.yml' );
        }
        catch ( Exception $e )
        {
            $failure = true;
        }

        $this->assertTrue( $failure );

        $this->assertFalse( $this->object->isLoaded( ) );
    }

    /**
     *
     */
    public function testSanitizePass( )
    {
        $failure = false;

        $this->object->load( dirname( __FILE__ ) . '/../config/good.yml' );

        try
        {
            $this->assertTrue( $this->object->sanitize( ) );
        }
        catch ( Exception $e )
        {
            $failure = true;
        }

        $this->assertFalse( $failure );
    }

    /**
     *
     */
    public function testSanitizeFail( )
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     *
     */
    public function testOffsetSet( )
    {
        $failure = false;

        try
        {
            $this->object[ 'test' ] = 'not allowed';
        }
        catch ( Exception $e )
        {
            $failure = true;
        }

        $this->assertTrue( $failure );
    }

    /**
     *
     */
    public function testOffsetUnset( )
    {
        $failure = false;

        try
        {
            unset( $this->object[ 'test' ] );
        }
        catch ( Exception $e )
        {
            $failure = true;
        }

        $this->assertTrue( $failure );
    }

    /**
     *
     */
    public function testOffsetExists( )
    {
        // check real value
        $this->assertTrue( isset( $this->object[ 'test' ] ) );

        // check fake value
        $this->assertFalse( isset( $this->object[ 'foobar' ] ) );
    }

    /**
     *
     */
    public function testOffsetGet( )
    {
        // check real value
        $this->assertEquals( 'initialized', $this->object[ 'test' ] );

        // check fake value
        $this->assertNull( $this->object[ 'foobar' ] );
    }
}

