<?php
require_once dirname(__FILE__).'/../../lib/Hydrator.php';
require_once dirname(__FILE__).'/../../lib/Request.php';

/**
 * Test class for Helios_Hydrator.
 * Generated by PHPUnit on 2010-02-10 at 13:35:50.
 */
class Helios_HydratorTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Helios_Hydrator
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Helios_Hydrator;

        $this->request = new Helios_Request( );

        $rawResponse = file_get_contents( dirname(__FILE__) . '/../data/facetedResponse.json' );

        $this->response = new Apache_Solr_Response( $rawResponse, array( 'HTTP/1.0 200 OK', 'Content-Type: text/plain; charset=UTF-8' ), false );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     *
     */
    public function testHydrateReturnsCollection()
    {
        $collection = $this->object->hydrate( $this->request, $this->response );

        $this->assertTrue( $collection instanceof Helios_Collection );
    }

    /**
     *
     */
    public function testHydratedDocuments()
    {
        $collection = $this->object->hydrate( $this->request, $this->response );

        $this->assertEquals( 2, count( $collection ) );

        $this->assertEquals( 'foo-1', $collection[ 0 ][ 'uid' ] );
        $this->assertEquals( 'foo-2', $collection[ 1 ][ 'uid' ] );

        $this->assertEquals( 'one', $collection[ 0 ][ 'field_one_str' ] );
        $this->assertEquals( 2, $collection[ 0 ][ 'field_two_int' ] );

        $this->assertEquals( 'two', $collection[ 1 ][ 'field_one_str' ] );
        $this->assertEquals( 3, $collection[ 1 ][ 'field_two_int' ] );
    }

    /**
     *
     */
    public function testHydratedFacetFields()
    {
        $collection = $this->object->hydrate( $this->request, $this->response );

        $facets = $collection->getFacetFields( );

        $this->assertEquals( 1, count( $facets ) );

        $facet = $facets[ 0 ];

        $this->assertTrue( $facet instanceof Helios_Facet );

        $this->assertEquals( 'field_one_str', $facet->getName( ) );

        $tag = $facet[ 0 ];

        $this->assertEquals( 'one', $tag->getName( ) );
        $this->assertEquals( 1, $tag->getTally( ) );

        $tag = $facet[ 1 ];

        $this->assertEquals( 'two', $tag->getName( ) );
        $this->assertEquals( 2, $tag->getTally( ) );
    }

}
